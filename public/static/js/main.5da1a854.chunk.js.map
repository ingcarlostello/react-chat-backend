{"version":3,"sources":["types/types.js","context/chat/chatReducer.jsx","context/chat/ChatContext.jsx","helpers/fetch.js","auth/AuthContext.jsx","pages/LoginPage.js","pages/RegisterPage.js","router/AuthRouter.js","router/PrivateRoute.jsx","router/PublicRoute.jsx","components/ChatSelect.js","components/Searchbox.js","components/SidebarChatItem.js","helpers/scrollToBottom.js","components/Sidebar.js","components/InboxPeople.js","helpers/hourMonth.js","components/IncomingMessage.js","components/OutgoingMessage.js","context/SocketContext.jsx","hooks/useSocket.jsx","components/SendMessage.js","components/Messages.js","pages/ChatPage.js","router/AppRouter.js","ChatApp.js","index.js"],"names":["types","chatReducer","state","action","type","allUsers","payload","userActiveChat","from","toWho","messages","uid","ChatContext","createContext","initialState","ChatProvider","children","useReducer","chatState","dispatch","Provider","value","urlBase","process","REACT_APP_API_URL","fetchSinToken","endpoint","data","a","method","url","fetch","resp","json","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","AuthContext","checking","logged","name","email","AuthProvider","useState","auth","setAuth","useContext","login","password","console","log","ok","setItem","user","register","userChat","verifyToken","useCallback","logout","removeItem","LoginPage","rememberme","form","setForm","useEffect","getEmailFromLocalStorage","prevForm","onChange","ev","target","handleSubmit","preventDefault","Swal","fire","className","onSubmit","placeholder","onClick","id","checked","readOnly","to","disabled","length","RegisterPage","formRegister","setFormRegister","AuthRouter","exact","path","component","PrivateRoute","isAuthenticated","Component","rest","props","PublicRoute","ChatSelect","Searchbox","SidebarChatItem","userName","openUserChatClick","animateScroll","scrollToBottom","containerId","duration","src","alt","online","Sidebar","filter","map","InboxPeople","hourMonth","theDate","moment","format","IncomingMessage","msg","message","createdAt","OutgoingMessage","SocketContext","SocketProvider","serverPath","socket","setSocket","setOnline","connectSocket","socketTemp","io","connect","transports","autoConnect","forceNew","query","disconnectSocket","disconnect","connected","on","useSocket","users","SendMessage","setMessage","emit","Messages","_id","ChatPage","AppRouter","ChatApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5da1a854.chunk.js","sourcesContent":["export const types={\r\n    usersLoaded: '[chat] users loaded',\r\n    activeUserChat: '[chat] active a user chat',\r\n    newMessage: '[chat] new message',\r\n    loadChatMessages: '[chat] load messages',\r\n    cleanChat: '[chat] clean the chat'\r\n}\r\n\r\n","// @Types\r\nimport { types } from \"../../types/types\";\r\n\r\nexport const chatReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case types.usersLoaded:\r\n      return {\r\n        ...state,\r\n        allUsers: [...action.payload]\r\n      }\r\n\r\n\r\n\r\n    case types.activeUserChat:\r\n      if (state.userActiveChat === action.payload) return state\r\n      return {\r\n        ...state,\r\n        userActiveChat: action.payload\r\n      }\r\n\r\n\r\n\r\n    case types.newMessage:\r\n      if (state.userActiveChat === action.payload.from || state.userActiveChat === action.payload.toWho) {\r\n        return {\r\n          ...state,\r\n          messages: [...state.messages, action.payload]\r\n        }\r\n      } else {\r\n        return state\r\n      }\r\n\r\n\r\n\r\n    case types.loadChatMessages:\r\n      return {\r\n        ...state,\r\n        // messages: action.payload  ----> way 1\r\n        messages: [...action.payload] // ----> way 2\r\n      }\r\n\r\n\r\n\r\n    case types.cleanChat:\r\n      return {\r\n        uid: '',\r\n        userActiveChat: null,\r\n        allUsers: [],\r\n        messages: []\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","// @React\r\nimport React, { useReducer } from 'react';\r\n\r\n// @Context\r\nimport { createContext } from \"react\";\r\n\r\n// @Reducers\r\nimport { chatReducer } from './chatReducer';\r\n\r\nexport const ChatContext = createContext();\r\n\r\nconst initialState = {\r\n    uid: '',\r\n    userActiveChat: null,\r\n    allUsers: [],\r\n    messages: []\r\n}\r\n\r\nconst ChatProvider = ({ children }) => {\r\n\r\n    const [chatState, dispatch] = useReducer(chatReducer, initialState);\r\n\r\n    return (\r\n        <ChatContext.Provider value={{\r\n            chatState,\r\n            dispatch\r\n        }}>\r\n            {children}\r\n        </ChatContext.Provider>\r\n    );\r\n};\r\n\r\nexport default ChatProvider;\r\n","const urlBase = process.env.REACT_APP_API_URL;\r\n\r\nexport const fetchSinToken = async (endpoint, data, method = 'GET') => {\r\n    const url = `${urlBase}/${endpoint}`;\r\n\r\n    if (method === 'GET') {\r\n        const resp = await fetch(url);\r\n        return await resp.json();\r\n    } else {\r\n        const resp = await fetch(url, {\r\n            method: method,\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n        return resp.json();\r\n    }\r\n};\r\n\r\nexport const fetchConToken = async (endpoint, data, method = 'GET') => {\r\n    const url = `${urlBase}/${endpoint}`;\r\n    const token = localStorage.getItem('token') || '';\r\n\r\n    if (method === 'GET') {\r\n        const resp = await fetch(url, {\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        });\r\n        return await resp.json();\r\n    } else {\r\n        const resp = await fetch(url, {\r\n            method: method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n        return resp.json();\r\n    }\r\n};","// @React\r\nimport React, { useCallback, useContext, useState } from \"react\";\r\nimport { createContext } from \"react\";\r\n\r\n// @Context\r\nimport { ChatContext } from \"../context/chat/ChatContext\";\r\n\r\n// @Helpers\r\nimport { fetchConToken, fetchSinToken } from \"../helpers/fetch\";\r\n\r\n// @Types\r\nimport { types } from \"../types/types\";\r\n\r\nexport const AuthContext = createContext();\r\n\r\nconst initialState = {\r\n  uid: null,\r\n  checking: true,\r\n  logged: false,\r\n  name: null,\r\n  email: null,\r\n};\r\n\r\nconst AuthProvider = ({ children }) => {\r\n  const [auth, setAuth] = useState(initialState);\r\n  const { dispatch } = useContext(ChatContext);\r\n\r\n  const login = async (email, password) => {\r\n    const resp = await fetchSinToken(\"login\", { email, password }, \"POST\");\r\n    console.log(resp);\r\n    // validate if we have a successfully login\r\n    if (resp.ok) {\r\n      localStorage.setItem(\"token\", resp.token);\r\n      const { user } = resp;\r\n      setAuth({\r\n        uid: user.uid,\r\n        checking: false,\r\n        logged: true,\r\n        name: user.name,\r\n        email: user.email,\r\n      });\r\n    }\r\n    return resp.ok;\r\n  };\r\n\r\n  const register = async (name, email, password) => {\r\n    const resp = await fetchSinToken(\r\n      \"login/new\",\r\n      { name, email, password },\r\n      \"POST\"\r\n    );\r\n   \r\n    // validate if we have a successfully login\r\n    if (resp.ok) {\r\n      localStorage.setItem(\"token\", resp.token);\r\n      const { userChat } = resp;\r\n      setAuth({\r\n        uid: userChat.uid,\r\n        checking: false,\r\n        logged: true,\r\n        name: userChat.name,\r\n        email: userChat.email,\r\n      });\r\n    }\r\n    return resp.ok;\r\n  };\r\n\r\n  const verifyToken = useCallback(async () => {\r\n    const token = localStorage.getItem(\"token\");\r\n\r\n    // if token does no exist\r\n    if (!token) {\r\n      setAuth({\r\n        uid: null,\r\n        checking: false,\r\n        logged: false,\r\n        name: null,\r\n        email: null,\r\n      });\r\n      return false;\r\n    }\r\n\r\n    // if token exist\r\n    const resp = await fetchConToken(\"login/renew\"); // is a GET method\r\n    if (resp.ok) {\r\n      localStorage.setItem(\"token\", resp.token);\r\n      const { user } = resp;\r\n      setAuth({\r\n        uid: user.uid,\r\n        checking: false,\r\n        logged: true,\r\n        name: user.name,\r\n        email: user.email,\r\n      });\r\n      console.log(\"Successfully authenticated \");\r\n      return true;\r\n    } else {\r\n      setAuth({\r\n        uid: null,\r\n        checking: false,\r\n        logged: false,\r\n        name: null,\r\n        email: null,\r\n      });\r\n      return false;\r\n    }\r\n  }, []);\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem(\"token\");\r\n    dispatch({\r\n      type: types.cleanChat,\r\n    });\r\n    setAuth({\r\n      // uid: null,\r\n      checking: false,\r\n      logged: false,\r\n      // name: null,\r\n      // email: null,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        auth,\r\n        login,\r\n        logout,\r\n        register,\r\n        verifyToken,\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthProvider;\r\n","// @React\nimport React, { useContext, useEffect, useState } from \"react\";\n\n// @Package\nimport { Link } from \"react-router-dom\";\nimport Swal from 'sweetalert2';\n\n// @Context\nimport { AuthContext } from \"../auth/AuthContext\";\n\nexport const LoginPage = () => {\n  const { login } = useContext(AuthContext);\n\n  const [form, setForm] = useState({\n    email: \"\",\n    password: \"\",\n    rememberme: false,\n  });\n\n  useEffect(() => {\n    const getEmailFromLocalStorage = localStorage.getItem(\"email\");\n    if (getEmailFromLocalStorage) {\n      //   setForm({\n      //     ...form,\n      //     rememberme: true,\n      //     email: getEmailFromLocalStorage,\n      //   });\n      setForm(prevForm => {\n        return {\n          ...prevForm,\n          rememberme: true,\n          email: getEmailFromLocalStorage,\n        }\n      })\n    }\n  }, []);\n\n  const onChange = (ev) => {\n    const { name, value } = ev.target;\n\n    setForm({\n      ...form,\n      [name]: value,\n    });\n  };\n\n  const toggleCheck = () => {\n    setForm({\n      ...form,\n      rememberme: !form.rememberme, //* (is equal to opposite value that check has)\n    });\n  };\n\n  const handleSubmit = async (ev) => {\n    ev.preventDefault();\n    \n    form.rememberme\n      ? localStorage.setItem(\"email\", form.email)\n      : localStorage.removeItem(\"email\");\n\n    const { email, password } = form;\n    const ok = await login(email, password);\n\n    if (!ok) {\n      Swal.fire('Error', 'Check email and password', 'error')\n    }\n  };\n\n  const enableLoginButton = () => {\n    return ((form.email.length > 0 && form.password.length > 0) ? true : false)\n  }\n\n  return (\n    <form\n      className=\"login100-form validate-form flex-sb flex-w\"\n      onSubmit={handleSubmit}\n    >\n      <span className=\"login100-form-title mb-3\">Chat - Enter</span>\n      <div className=\"wrap-input100 validate-input mb-3\">\n        <input\n          className=\"input100\"\n          name=\"email\"\n          placeholder=\"Email\"\n          type=\"email\"\n          value={form.email}\n          onChange={onChange}\n        />\n        <span className=\"focus-input100\"></span>\n      </div>\n      <div className=\"wrap-input100 validate-input mb-3\">\n        <input\n          className=\"input100\"\n          name=\"password\"\n          placeholder=\"Password\"\n          type=\"password\"\n          value={form.password}\n          onChange={onChange}\n        />\n        <span className=\"focus-input100\"></span>\n      </div>\n      <div className=\"row mb-3\">\n        <div className=\"col\" onClick={() => toggleCheck()}>\n          <input\n            className=\"input-checkbox100\"\n            id=\"ckb1\"\n            type=\"checkbox\"\n            name=\"rememberme\"\n            checked={form.rememberme}\n            readOnly\n          />\n          <label className=\"label-checkbox100\">Remember me</label>\n        </div>\n        <div className=\"col text-right\">\n          <Link to=\"/auth/register\" className=\"txt1\">\n            New account?\n          </Link>\n        </div>\n      </div>\n      <div className=\"container-login100-form-btn m-t-17\">\n        <button\n          className=\"login100-form-btn\"\n          type=\"submit\"\n          disabled={!enableLoginButton()}\n        >Login</button>\n      </div>\n    </form>\n  );\n};\n","// @React\nimport React, { useContext, useState } from \"react\";\n\n// @Package\nimport { Link } from \"react-router-dom\";\nimport Swal from \"sweetalert2\";\n\n// @Context\nimport { AuthContext } from \"../auth/AuthContext\";\n\n\nexport const RegisterPage = () => {\n  const { register } = useContext(AuthContext);\n\n  const [formRegister, setFormRegister] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n  });\n\n  const onChange = (ev) => {\n    const { name, value } = ev.target;\n\n    setFormRegister({\n      ...formRegister,\n      [name]: value,\n    });\n  };\n\n  const handleSubmit = async (ev) => {\n    ev.preventDefault();\n\n    const { name, email, password } = formRegister;\n    const ok = await register(name, email, password);\n\n    if (!ok) {\n        Swal.fire('Error', 'There is an account with this email', 'error')\n      }\n  };\n\n  const enableRegisterButton = () => {\n    return formRegister.email.length > 0 &&\n      formRegister.password.length > 0 &&\n      formRegister.name.length > 0\n      ? true\n      : false;\n  };\n\n  return (\n    <form\n      className=\"login100-form validate-form flex-sb flex-w\"\n      onSubmit={handleSubmit}\n    >\n      <span className=\"login100-form-title mb-3\">Chat - Register</span>\n\n      <div className=\"wrap-input100 validate-input mb-3\">\n        <input\n          className=\"input100\"\n          name=\"name\"\n          onChange={onChange}\n          placeholder=\"Name\"\n          type=\"text\"\n          value={formRegister.name}\n        />\n        <span className=\"focus-input100\"></span>\n      </div>\n\n      <div className=\"wrap-input100 validate-input mb-3\">\n        <input\n          className=\"input100\"\n          name=\"email\"\n          onChange={onChange}\n          placeholder=\"Email\"\n          type=\"email\"\n          value={formRegister.email}\n        />\n        <span className=\"focus-input100\"></span>\n      </div>\n\n      <div className=\"wrap-input100 validate-input mb-3\">\n        <input\n          className=\"input100\"\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"Password\"\n          value={formRegister.password}\n          onChange={onChange}\n        />\n        <span className=\"focus-input100\"></span>\n      </div>\n\n      <div className=\"row mb-3\">\n        <div className=\"col text-right\">\n          <Link to=\"/auth/login\" className=\"txt1\">\n            Do you already have an account?\n          </Link>\n        </div>\n      </div>\n\n      <div className=\"container-login100-form-btn m-t-17\">\n        <button\n          className=\"login100-form-btn\"\n          type=\"submit\"\n          disabled={!enableRegisterButton()}\n        >\n          Create Account\n        </button>\n      </div>\n    </form>\n  );\n};\n","// @React\nimport React from 'react';\n\n// @Package\nimport { Redirect, Route, Switch } from 'react-router-dom';\n\n// @Pages\nimport { LoginPage } from '../pages/LoginPage';\nimport { RegisterPage } from '../pages/RegisterPage';\n\n// @Styles\nimport '../css/login-register.css';\n\nexport const AuthRouter = () => {\n    return (\n\n        <div className=\"limiter\">\n\t\t    <div className=\"container-login100\">\n\t\t\t    <div className=\"wrap-login100 p-t-50 p-b-90\">\n                    <Switch>\n                        <Route exact path=\"/auth/login\" component={ LoginPage } />\n                        <Route exact path=\"/auth/register\" component={ RegisterPage } />\n                        <Redirect to=\"/auth/login\" />\n                    </Switch>\n                </div>\n            </div>\n        </div>\n    )\n}\n","// @React\r\nimport React from 'react';\r\n\r\n// @Package\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nconst PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route {...rest}\r\n            component={(props) => (\r\n                isAuthenticated ? <Component {...props} /> : <Redirect to=\"/auth\" />\r\n            )}\r\n        />\r\n    );\r\n};\r\n\r\nexport default PrivateRoute;","// @React\r\nimport React from 'react';\r\n\r\n// @Package\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nconst PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route {...rest}\r\n            component={(props) => (\r\n                !isAuthenticated ? <Component {...props} /> : <Redirect to=\"/\" />\r\n            )}\r\n        />\r\n    );\r\n};\r\n\r\nexport default PublicRoute;","import React from 'react'\n\nexport const ChatSelect = () => {\n    return (\n        <div className=\"middle-screen\">\n            <div className=\"alert-info\">\n                <hr />\n                <h3>Seleccione una persona</h3>\n                <span>\n                    Para comenzar una conversación\n                </span>\n\n            </div>\n        </div>\n    )\n}\n","// @React\nimport React, { useContext } from \"react\";\n\n// @Context\nimport { AuthContext } from \"../auth/AuthContext\";\n\nexport const Searchbox = () => {\n  const { auth, logout } = useContext(AuthContext);\n\n  return (\n    <div className=\"headind_srch\">\n      <div className=\"recent_heading mt-2\">\n        <h4>{auth.name}</h4>\n      </div>\n      <div className=\"srch_bar\">\n        <div className=\"stylish-input-group\">\n          <button className=\"btn text-danger\" onClick={logout}>\n            Exit\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n","// @React\nimport React, { useContext } from \"react\";\n\n// @Context\nimport { ChatContext } from \"../context/chat/ChatContext\";\n\n// @Helpers\nimport { fetchConToken } from \"../helpers/fetch\";\nimport { scrollToBottom } from \"../helpers/scrollToBottom\";\n\n// @Types\nimport { types } from \"../types/types\";\n\nexport const SidebarChatItem = ({ userName }) => {\n\n  const { dispatch, chatState } = useContext(ChatContext);\n\n  const openUserChatClick = async () => {\n    dispatch({\n      type: types.activeUserChat,\n      payload: userName.uid\n    });\n\n    //load chat messages\n    const resp = await fetchConToken(`messages/${userName.uid}`);\n\n    dispatch({\n      type: types.loadChatMessages,\n      payload: resp.messages\n    })\n    scrollToBottom('div-messages');\n  };\n\n  return (\n    <div\n      className={`chat_list ${userName.uid === chatState.userActiveChat && ' active_chat'}`}\n      onClick={openUserChatClick}\n    >\n      <div className=\"chat_people\">\n        <div className=\"chat_img\">\n          <img\n            src=\"https://www.pngkey.com/png/detail/114-1149878_setting-user-avatar-in-specific-size-without-breaking.png\"\n            alt=\"sunil\"\n          />\n        </div>\n        <div className=\"chat_ib\">\n          <h5>{userName.name}</h5>\n          {userName.online ? (\n            <span className=\"text-success\">Online</span>\n          ) : (\n            <span className=\"text-danger\">Offline</span>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","// @Package\r\nimport {animateScroll} from \"react-scroll\";\r\n\r\nexport const scrollToBottom = (id) => {\r\n    animateScroll.scrollToBottom({\r\n        containerId: id,\r\n        duration: 0\r\n    })\r\n}\r\n\r\nexport const scrollToBottomAnimated = (id) => {\r\n    animateScroll.scrollToBottom({\r\n        containerId: id,\r\n        duration: 300\r\n    })\r\n}","// @React\nimport React, { useContext } from 'react'\n\n// @Context\nimport { AuthContext } from '../auth/AuthContext';\nimport { ChatContext } from '../context/chat/ChatContext'\n\n// @Components\nimport { SidebarChatItem } from './SidebarChatItem'\n\nexport const Sidebar = () => {\n\n    const { auth } = useContext(AuthContext);\n    const { chatState } = useContext(ChatContext);\n\n    const { uid } = auth\n\n    return (\n        <div className=\"inbox_chat\">\n            {\n                chatState.allUsers.filter((user) => user.uid !== uid).map((user) => (\n                    <SidebarChatItem\n                        key={user.uid}\n                        userName={user}\n                    />\n                ))\n            }\n            <div className=\"extra_space\"></div>\n        </div>\n    )\n}\n","// @react\nimport React from 'react';\n\n// @components\nimport { Searchbox } from './Searchbox';\nimport { Sidebar } from './Sidebar';\n\nexport const InboxPeople = () => {\n    return (\n        <div className=\"inbox_people\">\n            <Searchbox />\n            <Sidebar />\n        </div>\n    )\n}\n","// @momentjs\r\nimport moment from 'moment';\r\n\r\nexport const hourMonth = (theDate) => {\r\n    const today = moment(theDate);\r\n    return today.format('HH:mm a | MMM Do');\r\n}","// @react\nimport React from 'react'\n\n// @helpers\nimport { hourMonth } from '../helpers/hourMonth';\n\nexport const IncomingMessage = ({msg}) => {\n\n    return (\n        <div className=\"incoming_msg\">\n            <div className=\"incoming_msg_img\">\n                <img src=\"https://ptetutorials.com/images/user-profile.png\" alt=\"sunil\" />\n            </div>\n            <div className=\"received_msg\">\n                <div className=\"received_withd_msg\">\n                    <p>{msg.message}</p>\n                    <span className=\"time_date\">{hourMonth(msg.createdAt)}</span>\n                </div>\n            </div>\n        </div>\n    )\n}\n","// @React\nimport React from 'react'\n\n// @Helpers\nimport { hourMonth } from '../helpers/hourMonth'\n\nexport const OutgoingMessage = ({msg}) => {\n    return (\n        <div className=\"outgoing_msg\">\n            <div className=\"sent_msg\">\n                <p>{msg.message}</p>\n                <span className=\"time_date\">{hourMonth(msg.createdAt)}</span>\n            </div>\n        </div>\n    )\n}\n","// @React\r\nimport React, { useContext, useEffect } from 'react';\r\nimport { createContext } from 'react';\r\n\r\n// @Context\r\nimport { AuthContext } from '../auth/AuthContext';\r\nimport { ChatContext } from './chat/ChatContext';\r\n\r\n// @Helpers\r\nimport { scrollToBottomAnimated } from '../helpers/scrollToBottom';\r\n\r\n// @Custom Hooks\r\nimport { useSocket } from '../hooks/useSocket'\r\n\r\n// @Types\r\nimport { types } from '../types/types';\r\n\r\n\r\n\r\nexport const SocketContext = createContext();\r\n\r\nexport const SocketProvider = ({ children }) => {\r\n\r\n    const { socket, online, connectSocket, disconnectSocket } = useSocket('http://localhost:8080');\r\n    \r\n    const {auth} = useContext(AuthContext)\r\n    const {dispatch} = useContext(ChatContext)\r\n\r\n    useEffect(() => {\r\n        if(auth.logged){\r\n            connectSocket();\r\n        }       \r\n    }, [auth, connectSocket])\r\n\r\n    useEffect(() => {\r\n        if(!auth.logged){\r\n            disconnectSocket();\r\n        }       \r\n    }, [auth, disconnectSocket])\r\n\r\n    useEffect(() => {\r\n       socket?.on('list-users', (users) => {\r\n           dispatch({\r\n               type: types.usersLoaded,\r\n               payload: users\r\n           })\r\n       })\r\n    }, [socket, dispatch])\r\n\r\n\r\n    useEffect(() => {\r\n        socket?.on('private-message', (message) => {\r\n            dispatch({\r\n                type: types.newMessage,\r\n                payload: message\r\n            });\r\n            scrollToBottomAnimated('div-messages');\r\n        })\r\n     }, [socket, dispatch])\r\n    \r\n    return (\r\n        <SocketContext.Provider value={{ socket, online }}>\r\n            { children }\r\n        </SocketContext.Provider>\r\n    )\r\n}","// @React\r\nimport { useCallback, useEffect, useState } from 'react';\r\n\r\n// @Package\r\nimport io from 'socket.io-client';\r\n\r\n\r\nexport const useSocket = (serverPath) => {\r\n\r\n    // const socket = useMemo(() => io.connect( serverPath, {transports: ['websocket']} ), [ serverPath ] );\r\n    const [socket, setSocket] = useState(null)\r\n    const [online, setOnline] = useState(false);\r\n\r\n    // save the function in memory and does not create it again\r\n    const connectSocket = useCallback(() => {\r\n        const token = localStorage.getItem('token');\r\n\r\n        const socketTemp = io.connect(serverPath, {\r\n            transports: ['websocket'],\r\n            autoConnect: true,\r\n            forceNew: true,\r\n            query: {\r\n                'x-token': token\r\n            }\r\n        });\r\n\r\n        setSocket(socketTemp);\r\n    }, [serverPath])\r\n\r\n    const disconnectSocket = useCallback(() => {\r\n        socket?.disconnect();\r\n    }, [socket]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        setOnline(socket?.connected);\r\n    }, [socket])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        // if socket exist\r\n        socket?.on('connect', () => setOnline(true));\r\n    }, [socket])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        // if socket exist\r\n        socket?.on('disconnect', () => setOnline(false));\r\n    }, [socket])\r\n\r\n    return {\r\n        connectSocket,\r\n        disconnectSocket,\r\n        online,\r\n        socket,\r\n    }\r\n}","// @React\nimport React, { useContext, useState } from \"react\";\n\n// @Context\nimport { AuthContext } from \"../auth/AuthContext\";\nimport { ChatContext } from \"../context/chat/ChatContext\";\nimport { SocketContext } from \"../context/SocketContext\";\n\nexport const SendMessage = () => {\n    const [message, setMessage] = useState(\"\");\n\n    const { auth } = useContext(AuthContext);\n    const { chatState } = useContext(ChatContext);\n    const { socket } = useContext(SocketContext);\n\n\n    const handleChange = ({ target }) => {\n        setMessage(target.value);\n    };\n\n\n    const handleSubmit = (ev) => {\n        ev.preventDefault();\n        if (message.length === 0) return;\n\n        setMessage(\"\");\n\n        // emit event to send a message\n        socket.emit(\"private-message\", {\n            from: auth.uid,\n            toWho: chatState.userActiveChat,\n            message: message,\n        });\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <div className=\"type_msg row\">\n                <div className=\"input_msg_write col-sm-9\">\n                    <input\n                        type=\"text\"\n                        className=\"write_msg\"\n                        placeholder=\"Mensaje...\"\n                        value={message}\n                        onChange={handleChange}\n                    />\n                </div>\n                <div className=\"col-sm-3 text-center\">\n                    <button className=\"msg_send_btn mt-3\" type=\"submit\">\n                        enviar\n                    </button>\n                </div>\n            </div>\n        </form>\n    );\n};\n","// @React\nimport React, { useContext } from \"react\";\n\n// @Context\nimport { AuthContext } from \"../auth/AuthContext\";\nimport { ChatContext } from \"../context/chat/ChatContext\";\n\n// @Components\nimport { IncomingMessage } from \"./IncomingMessage\";\nimport { OutgoingMessage } from \"./OutgoingMessage\";\nimport { SendMessage } from \"./SendMessage\";\n\nexport const Messages = () => {\n  const { auth } = useContext(AuthContext);\n  const { chatState } = useContext(ChatContext);\n\n  return (\n    <div className=\"mesgs\">\n      <div id=\"div-messages\" className=\"msg_history\">\n        {chatState.messages.map((msg) =>\n          msg.toWho === auth.uid ? (\n            <IncomingMessage key={msg._id} msg={msg} />\n          ) : (\n            <OutgoingMessage key={msg._id} msg={msg} />\n          )\n        )}\n      </div>\n      <SendMessage />\n    </div>\n  );\n};\n","// @React\nimport React, { useContext } from 'react';\n\n// @Components\nimport { ChatSelect } from '../components/ChatSelect';\nimport { InboxPeople } from '../components/InboxPeople';\nimport { Messages } from '../components/Messages';\n\n// @Context\nimport { ChatContext } from '../context/chat/ChatContext';\n\n// @Styles\nimport '../css/chat.css';\n\n\nexport const ChatPage = () => {\n    const { chatState } = useContext(ChatContext)\n    return (\n        <div className=\"messaging\">\n            <div className=\"inbox_msg\">\n\n                <InboxPeople />\n                {\n                    (chatState.userActiveChat)\n                        ? <Messages />\n                        : <ChatSelect />\n                }\n            </div>\n        </div>\n    )\n}\n","// @React\nimport React, { useContext, useEffect } from 'react';\n\n// @Package\nimport {\n    BrowserRouter as Router,\n    Redirect,\n    Switch,\n} from 'react-router-dom';\n\n// @Routes\nimport { AuthRouter } from './AuthRouter';\nimport PrivateRoute from './PrivateRoute';\nimport PublicRoute from './PublicRoute';\n\n// @Pages\nimport { ChatPage } from '../pages/ChatPage';\n\n// @Context\nimport { AuthContext } from '../auth/AuthContext';\n\n\nexport const AppRouter = () => {\n\n    const {auth, verifyToken} = useContext(AuthContext)\n\n    useEffect(() => {\n        verifyToken()\n    }, [verifyToken])\n\n    if(auth.checking){\n        return <h1>Wait a moment</h1>\n    }\n\n    return (\n        <Router>\n            <div>\n                <Switch>\n                    {/* <Route path=\"/auth\" component={AuthRouter} /> */}\n                    <PublicRoute \n                        isAuthenticated={auth.logged}\n                        path=\"/auth\" component={AuthRouter}\n                    />\n                    <PrivateRoute \n                        isAuthenticated={auth.logged}\n                        exact path=\"/\" component={ChatPage} \n                    />\n                    <Redirect to=\"/\" />\n                </Switch>\n            </div>\n        </Router>\n    )\n}\n","// @React\nimport React from \"react\";\n\n// @Routes\nimport { AppRouter } from \"./router/AppRouter\";\n\n// @Context\nimport { SocketProvider } from \"./context/SocketContext\";\nimport AuthProvider from \"./auth/AuthContext\";\nimport ChatProvider from \"./context/chat/ChatContext\";\n\n\nexport const ChatApp = () => {\n  return (\n    <ChatProvider>\n      <AuthProvider>\n        <SocketProvider>\n          <AppRouter />\n        </SocketProvider>\n      </AuthProvider>\n    </ChatProvider>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ChatApp } from './ChatApp';\nimport './index.css';\n\n\nReactDOM.render(\n  <ChatApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}